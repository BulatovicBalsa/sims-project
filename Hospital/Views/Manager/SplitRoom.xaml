<Window x:Class="Hospital.Views.Manager.SplitRoom"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Hospital.Views.Manager"
        xmlns:customControls="clr-namespace:Hospital.CustomControls"
        x:Name="SplitRoomWindow"
        mc:Ignorable="d"
        xmlns:viewModels="clr-namespace:Hospital.ViewModels.Manager"
        xmlns:validationRules="clr-namespace:Hospital.ValidationRules"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="SplitRoom" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>

        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0" Content="First new room" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <Label Grid.Row="0" Grid.Column="1" Content="Second new room" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <customControls:RoomForm Grid.Row="1" Grid.Column="0" Room="{Binding NewRooms[0]}" x:Name="LeftRoom"/>
        <customControls:RoomForm Grid.Row="1" Grid.Column="1" Room="{Binding NewRooms[1]}" x:Name="RightRoom"/>
        <DataGrid ItemsSource="{Binding TransfersToNewRooms[0].Items, Mode=TwoWay}" Grid.Row="2" Grid.Column="0"
                      AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Equipment" Binding="{Binding Equipment}" Width="*" IsReadOnly="True" />
                <DataGridTextColumn Header="Amount" Width="*" >

                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="Validation.ErrorTemplate">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <AdornedElementPlaceholder x:Name="placeholder" />
                                            <TextBlock Background="Red" Foreground="White" x:Name="ErrorTextBlock" Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}" HorizontalAlignment="Left" />

                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                    <DataGridTextColumn.Binding>
                        <Binding Path="Amount" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validationRules:IntRangeRule Min="1" Max="1000" />
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>

            </DataGrid.Columns>
        </DataGrid>
        <DataGrid ItemsSource="{Binding TransfersToNewRooms[1].Items, Mode=TwoWay}" Grid.Row="2" Grid.Column="1"
                      AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Equipment" Binding="{Binding Equipment}" Width="*" IsReadOnly="True" />
                <DataGridTextColumn Header="Amount" Width="*">

                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="Validation.ErrorTemplate">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <AdornedElementPlaceholder x:Name="placeholder" />
                                            <TextBlock Background="Red" Foreground="White" x:Name="ErrorTextBlock" Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}" HorizontalAlignment="Left" />

                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                    <DataGridTextColumn.Binding>
                        <Binding Path="Amount" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validationRules:IntRangeRule Min="1" Max="1000" />
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>

            </DataGrid.Columns>
        </DataGrid>
        <Label Grid.Row="3" Grid.Column="0" Content="Start date" HorizontalAlignment="Center" FontSize="20" VerticalAlignment="Bottom"/>
        <Label Grid.Row="3" Grid.Column="1" Content="End date" HorizontalAlignment="Center" FontSize="20" VerticalAlignment="Bottom"/>
        <xctk:DateTimePicker Grid.Row="4" Grid.Column="0" VerticalAlignment="Top" Value="{Binding TimeRange.StartTime, Mode=TwoWay}" />
        <xctk:DateTimePicker Grid.Row="4" Grid.Column="1" VerticalAlignment="Top" Value="{Binding TimeRange.EndTime, Mode=TwoWay}" />
        <Button Grid.Row="5" Grid.ColumnSpan="2" Content="Submit" FontSize="30" Command="{Binding SplitRoomCommand}" CommandParameter="{Binding ElementName=SplitRoomWindow}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=HasErrors, ElementName=LeftRoom}" Value="False"/>
                                <Condition Binding="{Binding Path=HasErrors, ElementName=RightRoom}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
